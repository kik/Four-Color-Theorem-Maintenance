#############################################################################
##  v      #                   The Coq Proof Assistant                     ##
## <O___,, #                INRIA - CNRS - LIX - LRI - PPS                 ##
##   \VV/  #                                                               ##
##    //   #  Makefile automagically generated by coq_makefile V8.3pl2     ##
#############################################################################

# WARNING
#
# This Makefile has been automagically generated
# Edit at your own risks !
#
# END OF WARNING

#
# This Makefile was generated by the command line :
# coq_makefile -f Make -o Makefile 
#

# 
# This Makefile may take 3 arguments passed as environment variables:
#   - COQBIN to specify the directory where Coq binaries resides;
#   - CAMLBIN and CAMLP4BIN to give the path for the OCaml and Camlp4/5 binaries.
COQLIB:=$(shell $(COQBIN)coqtop -where | sed -e 's/\\/\\\\/g')
CAMLP4:="$(shell $(COQBIN)coqtop -config | awk -F = '/CAMLP4=/{print $$2}')"
ifndef CAMLP4BIN
  CAMLP4BIN:=$(CAMLBIN)
endif

CAMLP4LIB:=$(shell $(CAMLP4BIN)$(CAMLP4) -where)

##########################
#                        #
# Libraries definitions. #
#                        #
##########################

OCAMLLIBS:=
COQSRCLIBS:=-I $(COQLIB)/kernel -I $(COQLIB)/lib \
  -I $(COQLIB)/library -I $(COQLIB)/parsing \
  -I $(COQLIB)/pretyping -I $(COQLIB)/interp \
  -I $(COQLIB)/proofs -I $(COQLIB)/tactics \
  -I $(COQLIB)/toplevel \
  -I $(COQLIB)/plugins/cc \
  -I $(COQLIB)/plugins/dp \
  -I $(COQLIB)/plugins/extraction \
  -I $(COQLIB)/plugins/field \
  -I $(COQLIB)/plugins/firstorder \
  -I $(COQLIB)/plugins/fourier \
  -I $(COQLIB)/plugins/funind \
  -I $(COQLIB)/plugins/groebner \
  -I $(COQLIB)/plugins/interface \
  -I $(COQLIB)/plugins/micromega \
  -I $(COQLIB)/plugins/nsatz \
  -I $(COQLIB)/plugins/omega \
  -I $(COQLIB)/plugins/quote \
  -I $(COQLIB)/plugins/ring \
  -I $(COQLIB)/plugins/romega \
  -I $(COQLIB)/plugins/rtauto \
  -I $(COQLIB)/plugins/setoid_ring \
  -I $(COQLIB)/plugins/subtac \
  -I $(COQLIB)/plugins/subtac/test \
  -I $(COQLIB)/plugins/syntax \
  -I $(COQLIB)/plugins/xml
COQLIBS:= -R coq FCT
COQDOCLIBS:=-R coq FCT

##########################
#                        #
# Variables definitions. #
#                        #
##########################

ZFLAGS=$(OCAMLLIBS) $(COQSRCLIBS) -I $(CAMLP4LIB)
OPT:=
COQFLAGS:=-q $(OPT) $(COQLIBS) $(OTHERFLAGS) $(COQ_XML)
ifdef CAMLBIN
  COQMKTOPFLAGS:=-camlbin $(CAMLBIN) -camlp4bin $(CAMLP4BIN)
endif
COQC:=$(COQBIN)coqc
COQDEP:=$(COQBIN)coqdep -c
GALLINA:=$(COQBIN)gallina
COQDOC:=$(COQBIN)coqdoc
COQMKTOP:=$(COQBIN)coqmktop
CAMLLIB:=$(shell $(CAMLBIN)ocamlc.opt -where)
CAMLC:=$(CAMLBIN)ocamlc.opt -c -rectypes
CAMLOPTC:=$(CAMLBIN)ocamlopt.opt -c -rectypes
CAMLLINK:=$(CAMLBIN)ocamlc.opt -rectypes
CAMLOPTLINK:=$(CAMLBIN)ocamlopt.opt -rectypes
GRAMMARS:=grammar.cma
CAMLP4EXTEND:=pa_extend.cmo pa_macro.cmo q_MLast.cmo
CAMLP4OPTIONS:=
PP:=-pp "$(CAMLP4BIN)$(CAMLP4)o -I $(CAMLLIB) -I . $(COQSRCLIBS) $(CAMLP4EXTEND) $(GRAMMARS) $(CAMLP4OPTIONS) -impl"

###################################
#                                 #
# Definition of the "all" target. #
#                                 #
###################################

VFILES:=coq/approx.v\
  coq/birkhoff.v\
  coq/cfcolor.v\
  coq/cfcontract.v\
  coq/cfmap.v\
  coq/cfquiz.v\
  coq/cfreducible.v\
  coq/chromogram.v\
  coq/coloring.v\
  coq/color.v\
  coq/combinatorial4ct.v\
  coq/compat.v\
  coq/configurations.v\
  coq/connect.v\
  coq/contract.v\
  coq/ctreerestrict.v\
  coq/ctree.v\
  coq/cube.v\
  coq/dedekind.v\
  coq/discharge.v\
  coq/discretize.v\
  coq/dyck.v\
  coq/embed.v\
  coq/finitize.v\
  coq/fourcolor.v\
  coq/frac.v\
  coq/geometry.v\
  coq/gridmap.v\
  coq/grid.v\
  coq/gtreerestrict.v\
  coq/gtree.v\
  coq/hubcap.v\
  coq/hypermap.v\
  coq/initctree.v\
  coq/initgtree.v\
  coq/job001to106.v\
  coq/job107to164.v\
  coq/job165to189.v\
  coq/job190to206.v\
  coq/job207to214.v\
  coq/job215to218.v\
  coq/job219to222.v\
  coq/job223to226.v\
  coq/job227to230.v\
  coq/job231to234.v\
  coq/job235to238.v\
  coq/job239to253.v\
  coq/job254to270.v\
  coq/job271to278.v\
  coq/job279to282.v\
  coq/job283to286.v\
  coq/job287to290.v\
  coq/job291to294.v\
  coq/job295to298.v\
  coq/job299to302.v\
  coq/job303to306.v\
  coq/job307to310.v\
  coq/job311to314.v\
  coq/job315to318.v\
  coq/job319to322.v\
  coq/job323to383.v\
  coq/job384to398.v\
  coq/job399to438.v\
  coq/job439to465.v\
  coq/job466to485.v\
  coq/job486to489.v\
  coq/job490to494.v\
  coq/job495to498.v\
  coq/job499to502.v\
  coq/job503to506.v\
  coq/job507to510.v\
  coq/job511to516.v\
  coq/job517to530.v\
  coq/job531to534.v\
  coq/job535to541.v\
  coq/job542to545.v\
  coq/job546to549.v\
  coq/job550to553.v\
  coq/job554to562.v\
  coq/job563to588.v\
  coq/job589to610.v\
  coq/job611to617.v\
  coq/job618to622.v\
  coq/job623to633.v\
  coq/jordan.v\
  coq/kempetree.v\
  coq/kempe.v\
  coq/matte.v\
  coq/oldeqtype.v\
  coq/oldfinset.v\
  coq/oldpath.v\
  coq/oldseq.v\
  coq/oldssrbool.v\
  coq/oldssreflect.v\
  coq/oldssrfun.v\
  coq/oldssrnat.v\
  coq/oldssrtest.v\
  coq/part.v\
  coq/patch.v\
  coq/present10.v\
  coq/present11.v\
  coq/present5.v\
  coq/present6.v\
  coq/present7.v\
  coq/present8.v\
  coq/present9.v\
  coq/present.v\
  coq/quiztree.v\
  coq/quiz.v\
  coq/realcategorical.v\
  coq/realmap.v\
  coq/realprop.v\
  coq/realsyntax.v\
  coq/real.v\
  coq/redpart.v\
  coq/reducibility.v\
  coq/revsnip.v\
  coq/sew.v\
  coq/snip.v\
  coq/task001to214.v\
  coq/task215to234.v\
  coq/task235to282.v\
  coq/task283to302.v\
  coq/task303to322.v\
  coq/task323to485.v\
  coq/task486to506.v\
  coq/task507to541.v\
  coq/task542to588.v\
  coq/task589to633.v\
  coq/unavoidability.v\
  coq/walkup.v\
  coq/znat.v
VOFILES:=$(VFILES:.v=.vo)
VOFILES1:=$(patsubst coq/%,%,$(filter coq/%,$(VOFILES)))
VOFILES0:=$(filter-out coq/%,$(VOFILES))
GLOBFILES:=$(VFILES:.v=.glob)
VIFILES:=$(VFILES:.v=.vi)
GFILES:=$(VFILES:.v=.g)
HTMLFILES:=$(VFILES:.v=.html)
GHTMLFILES:=$(VFILES:.v=.g.html)

all: $(VOFILES) 
spec: $(VIFILES)

gallina: $(GFILES)

html: $(GLOBFILES) $(VFILES)
	- mkdir -p html
	$(COQDOC) -toc -html $(COQDOCLIBS) -d html $(VFILES)

gallinahtml: $(GLOBFILES) $(VFILES)
	- mkdir -p html
	$(COQDOC) -toc -html -g $(COQDOCLIBS) -d html $(VFILES)

all.ps: $(VFILES)
	$(COQDOC) -toc -ps $(COQDOCLIBS) -o $@ `$(COQDEP) -sort -suffix .v $(VFILES)`

all-gal.ps: $(VFILES)
	$(COQDOC) -toc -ps -g $(COQDOCLIBS) -o $@ `$(COQDEP) -sort -suffix .v $(VFILES)`

all.pdf: $(VFILES)
	$(COQDOC) -toc -pdf $(COQDOCLIBS) -o $@ `$(COQDEP) -sort -suffix .v $(VFILES)`

all-gal.pdf: $(VFILES)
	$(COQDOC) -toc -pdf -g $(COQDOCLIBS) -o $@ `$(COQDEP) -sort -suffix .v $(VFILES)`



####################
#                  #
# Special targets. #
#                  #
####################

.PHONY: all opt byte archclean clean install depend html

%.vo %.glob: %.v
	$(COQC) $(COQDEBUG) $(COQFLAGS) $*

%.vi: %.v
	$(COQC) -i $(COQDEBUG) $(COQFLAGS) $*

%.g: %.v
	$(GALLINA) $<

%.tex: %.v
	$(COQDOC) -latex $< -o $@

%.html: %.v %.glob
	$(COQDOC) -html $< -o $@

%.g.tex: %.v
	$(COQDOC) -latex -g $< -o $@

%.g.html: %.v %.glob
	$(COQDOC) -html -g $< -o $@

%.v.d: %.v
	$(COQDEP) -slash $(COQLIBS) "$<" > "$@" || ( RV=$$?; rm -f "$@"; exit $${RV} )

byte:
	$(MAKE) all "OPT:=-byte"

opt:
	$(MAKE) all "OPT:=-opt"

install:
	mkdir -p $(COQLIB)/user-contrib
	(cd coq; for i in $(VOFILES1); do \
	 install -d `dirname $(COQLIB)/user-contrib/FCT/$$i`; \
	 install $$i $(COQLIB)/user-contrib/FCT/$$i; \
	 done)
	(for i in $(VOFILES0); do \
	 install -d `dirname $(COQLIB)/user-contrib/$(INSTALLDEFAULTROOT)/$$i`; \
	 install $$i $(COQLIB)/user-contrib/$(INSTALLDEFAULTROOT)/$$i; \
	 done)

clean:
	rm -f $(CMOFILES) $(CMIFILES) $(CMXFILES) $(CMXSFILES) $(OFILES) $(VOFILES) $(VIFILES) $(GFILES) $(MLFILES:.ml=.cmo) $(MLFILES:.ml=.cmx) *~
	rm -f all.ps all-gal.ps all.pdf all-gal.pdf all.glob $(VFILES:.v=.glob) $(HTMLFILES) $(GHTMLFILES) $(VFILES:.v=.tex) $(VFILES:.v=.g.tex) $(VFILES:.v=.v.d)
	- rm -rf html

archclean:
	rm -f *.cmx *.o


printenv: 
	@echo CAMLC =	$(CAMLC)
	@echo CAMLOPTC =	$(CAMLOPTC)
	@echo CAMLP4LIB =	$(CAMLP4LIB)

Makefile: Make
	mv -f Makefile Makefile.bak
	$(COQBIN)coq_makefile -f Make -o Makefile


-include $(VFILES:.v=.v.d)
.SECONDARY: $(VFILES:.v=.v.d)

# WARNING
#
# This Makefile has been automagically generated
# Edit at your own risks !
#
# END OF WARNING

